---
# tasks file for install
- name: Check for step CLI step_cli_version variable and set it to the latest version if not set
  block:
    - name: Check GitHub for the latest release of step CLI
      become: no
      delay: 10
      delegate_to: localhost
      retries: 5
      run_once: True
      ansible.builtin.uri:
        body_format: json
        return_content: True
        url: https://api.github.com/repos/smallstep/cli/releases/latest
      register: step_cli_github_response
    - name: Set step_cli_version fact to the latest release
      ansible.builtin.set_fact:
        step_cli_version: "{{ step_cli_github_response.json.tag_name }}"
  when: not step_cli_version

- name: Set step_cli_arch and step_cli_archive_format facts
  ansible.builtin.set_fact:
    step_cli_arch: "{{ step_cli_arch_map[ansible_architecture] }}"
    step_cli_archive_format: "{{ step_cli_archive_map[ansible_system | lower] }}"

- name: Create temporary step CLI download directory
  ansible.builtin.tempfile:
    state: directory
    prefix: step-cli-download-
  register: step_cli_tmpdir
  when: not ansible_system == "Windows"

- name: Include Windows tasks
  ansible.builtin.include_tasks: windows.yaml
  when: ansible_system == "Windows"

- name: Set step-cli file name fact
  ansible.builtin.set_fact:
    step_cli_filename: "step_{{ ansible_system | lower }}_{{ step_cli_version | replace('v','') }}_{{ step_cli_arch }}.{{ step_cli_archive_format }}"

- name: Download step CLI archive
  ansible.builtin.get_url:
    url: "{{ step_cli_download_url }}/{{ step_cli_version }}/{{ step_cli_filename }}"
    dest: "{{ step_cli_tmpdir.path }}"
    checksum: sha256:{{ step_cli_download_url }}/{{ step_cli_version }}/checksums.txt

- name: Download step CLI pem and sig files
  ansible.builtin.get_url:
    url: "{{ step_cli_download_url }}/{{ step_cli_version }}/{{ item }}"
    dest: "{{ step_cli_tmpdir.path }}"
  with_items:
    - "{{ step_cli_filename }}.pem"
    - "{{ step_cli_filename }}.sig"

- name: Verify the step-cli archive using Sigstore and fail if it doesn't pass verification
  ansible.builtin.include_role:
    name: smallstep.sigstore.verify_artifact
  vars:
    verify_artifact_file: "{{ step_cli_tmpdir.path }}/{{ step_cli_filename }}"
    verify_artifact_certificate: "{{ step_cli_tmpdir.path }}/{{ step_cli_filename }}.pem"
    verify_artifact_signature: "{{ step_cli_tmpdir.path }}/{{ step_cli_filename }}.sig"
    verify_artifact_cert_identity: "https://github.com/smallstep/cli/.github/workflows/release.yml@refs/tags/{{ step_cli_version }}"
    verify_artifact_cert_oidc_issuer: "https://token.actions.githubusercontent.com"
    verify_artifact_fail_run: True
    verify_artifact_pip_sigstore_install: True
    verify_artifact_pip_sigstore_version: 1.1.2
  when: step_cli_verify_signature

- name: Install step CLI binary
  ansible.builtin.unarchive:
    src: "{{ step_cli_tmpdir.path }}/{{ step_cli_filename }}"
    dest: "{{ step_cli_install_path }}"
    extra_opts:
      - --strip-components=2
    remote_src: yes
  when: not ansible_system == "Windows"

- name: Remove temporary step CLI download directory
  ansible.builtin.file:
    path: "{{ step_cli_tmpdir.path }}"
    state: absent
  when: step_cli_tmpdir.path is defined
